// @generated by protoc-gen-es v2.6.0
// @generated from file api/v1/frontmatter.proto (package api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct } from "@bufbuild/protobuf";

/**
 * The request message containing the page name.
 *
 * @generated from message api.v1.GetFrontmatterRequest
 */
export class GetFrontmatterRequest extends Message {
  /**
   * @generated from field: string page = 1;
   */
  page = "";

  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }

  static runtime = proto3;
  static typeName = "api.v1.GetFrontmatterRequest";
  static fields = proto3.util.newFieldList(() => [
    { no: 1, name: "page", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes, options) {
    return new GetFrontmatterRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue, options) {
    return new GetFrontmatterRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString, options) {
    return new GetFrontmatterRequest().fromJsonString(jsonString, options);
  }

  static equals(a, b) {
    return proto3.util.equals(GetFrontmatterRequest, a, b);
  }
}

/**
 * The response message containing the frontmatter.
 *
 * @generated from message api.v1.GetFrontmatterResponse
 */
export class GetFrontmatterResponse extends Message {
  /**
   * google.protobuf.Struct is used to represent the frontmatter,
   * which is a map[string]any.
   *
   * @generated from field: google.protobuf.Struct frontmatter = 1;
   */
  frontmatter;

  constructor(data) {
    super();
    proto3.util.initPartial(data, this);
  }

  static runtime = proto3;
  static typeName = "api.v1.GetFrontmatterResponse";
  static fields = proto3.util.newFieldList(() => [
    { no: 1, name: "frontmatter", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes, options) {
    return new GetFrontmatterResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue, options) {
    return new GetFrontmatterResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString, options) {
    return new GetFrontmatterResponse().fromJsonString(jsonString, options);
  }

  static equals(a, b) {
    return proto3.util.equals(GetFrontmatterResponse, a, b);
  }
}

// ... Additional message types would go here for other frontmatter operations
// For brevity, only showing the main request/response types