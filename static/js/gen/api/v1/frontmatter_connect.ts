// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file api/v1/frontmatter.proto (package api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetFrontmatterRequest, GetFrontmatterResponse, MergeFrontmatterRequest, MergeFrontmatterResponse, RemoveKeyAtPathRequest, RemoveKeyAtPathResponse, ReplaceFrontmatterRequest, ReplaceFrontmatterResponse } from "./frontmatter_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * The Frontmatter service definition.
 *
 * @generated from service api.v1.Frontmatter
 */
export const Frontmatter = {
  typeName: "api.v1.Frontmatter",
  methods: {
    /**
     * Gets the frontmatter for a given page.
     *
     * @generated from rpc api.v1.Frontmatter.GetFrontmatter
     */
    getFrontmatter: {
      name: "GetFrontmatter",
      I: GetFrontmatterRequest,
      O: GetFrontmatterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Merges the given frontmatter with the existing frontmatter for a page.
     *
     * @generated from rpc api.v1.Frontmatter.MergeFrontmatter
     */
    mergeFrontmatter: {
      name: "MergeFrontmatter",
      I: MergeFrontmatterRequest,
      O: MergeFrontmatterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Replaces the entire frontmatter for a given page.
     *
     * @generated from rpc api.v1.Frontmatter.ReplaceFrontmatter
     */
    replaceFrontmatter: {
      name: "ReplaceFrontmatter",
      I: ReplaceFrontmatterRequest,
      O: ReplaceFrontmatterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes a key from the frontmatter at a given path.
     *
     * @generated from rpc api.v1.Frontmatter.RemoveKeyAtPath
     */
    removeKeyAtPath: {
      name: "RemoveKeyAtPath",
      I: RemoveKeyAtPathRequest,
      O: RemoveKeyAtPathResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

