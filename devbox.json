{
  "$schema": "https://raw.githubusercontent.com/jetify-com/devbox/0.14.2/.schema/devbox.schema.json",
  "packages": [
    "go@latest",
    "ginkgo@latest",
    "buf@latest",
    "markdownlint-cli@latest",
    "evans@latest",
    "grpcurl@latest",
    "podman@latest",
    "rootlesskit@latest",
    "bun@latest",
    "chromium@latest",
    "go-tools",
    "revive@latest",
    "ast-grep@latest",
    "playwright@latest",
    "playwright-driver@latest",
    "playwright-test@latest",
    "gh@latest",
    "jdk21@latest",
    "android-tools@latest",
    "gradle@latest",
    "libxml2@latest"
  ],
  "shell": {
    "init_hook": [
      "echo 'Welcome to devbox!' > /dev/null"
    ],
    "scripts": {
      "fe:test": [
        "./.devbox_run_scripts/run_fe_tests.sh $@"
      ],
      "fe:lint": [
        "cd static/js && bun install && bun run -- eslint . --ext .ts --max-warnings 0"
      ],
      "lint:md": [
        "markdownlint --fix '**/*.md' --ignore vendor"
      ],
      "lint:xml": [
        "find android/app/src/main -name '*.xml' -type f -exec xmllint --noout {} \\;"
      ],
      "go:test": [
        "go test ./..."
      ],
      "go:lint": [
        "revive -config revive.toml -set_exit_status ./..."
      ],
      "go:coverage": [
        "go list ./... | grep -v \"/gen/\" | xargs go test -coverprofile=coverage.out",
        "go tool cover -func=coverage.out | tail -1"
      ],
      "go:generate": [
        "go generate ./..."
      ],
      "go:deadcode": [
        "go run golang.org/x/tools/cmd/deadcode@latest ."
      ],
      "lint:everything": [
        "if git status --porcelain api/proto | grep -q '.'; then buf generate; else echo 'No changes in api/proto, skipping buf generate.'; fi",
        "go mod tidy",
        "go vet $(go list ./... | grep -v /gen/)",
        "staticcheck $(go list ./... | grep -v /gen/)",
        "revive -config revive.toml ./...",
        "go test ./...",
        "./.devbox_run_scripts/android_gradle.sh test",
        "go run golang.org/x/tools/cmd/deadcode@latest .",
        "markdownlint --fix '**/*.md' --ignore vendor",
        "find android/app/src/main -name '*.xml' -type f -exec xmllint --noout {} \\; || true",
        "export CHROMIUM_BIN=$(which chromium)",
        "cd static/js && bun install && bun run build && bun run test && bun run lint"
      ],
      "build": [
        "./.devbox_run_scripts/build.sh $@"
      ],
      "storybook": [
        "cd static/js && bun install && bun run storybook"
      ],
      "storybook:build": [
        "cd static/js && bun install && bun run build-storybook"
      ],
      "chromatic": [
        "cd static/js && bun install && bun run build-storybook && bunx chromatic --project-token=$CHROMATIC_PROJECT_TOKEN --storybook-build-dir=storybook-static --exit-zero-on-changes"
      ],
      "chromatic:pr": [
        "cd static/js && bun install && bun run build-storybook && bunx chromatic --project-token=$CHROMATIC_PROJECT_TOKEN --storybook-build-dir=storybook-static --patch-build=$HEAD_BRANCH...$BASE_BRANCH --exit-zero-on-changes"
      ],
      "e2e:test": [
        "devbox run build",
        "export CHROMIUM_BIN=$(which chromium)",
        "cd e2e && bun install && bunx playwright test"
      ],
      "e2e:test:headed": [
        "devbox run build",
        "export CHROMIUM_BIN=$(which chromium)",
        "cd e2e && bun install && bun run test:headed"
      ],
      "e2e:codegen": [
        "cd e2e & playwright codegen --browser=chromium http://localhost:8050/home"
      ],
      "deploy": [
        "./.devbox_run_scripts/deploy.sh $@"
      ],
      "android:setup": [
        "./.devbox_run_scripts/setup_android_sdk.sh"
      ],
      "android:sync": [
        "CAPACITOR_DEV=true ./.devbox_run_scripts/capacitor_sync.sh"
      ],
      "android:sync:prod": [
        "./.devbox_run_scripts/capacitor_sync.sh"
      ],
      "android:build:debug": [
        "./.devbox_run_scripts/android_gradle.sh assembleDebug"
      ],
      "android:build:release": [
        "./.devbox_run_scripts/android_gradle.sh bundleRelease"
      ],
      "android:test": [
        "./.devbox_run_scripts/android_gradle.sh test"
      ],
      "android:install": [
        "adb install -r android/app/build/outputs/apk/debug/app-debug.apk"
      ],
      "android:clean": [
        "cd android && ./gradlew clean"
      ]
    }
  }
}
